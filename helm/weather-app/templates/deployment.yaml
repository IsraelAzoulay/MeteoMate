# Kubernetes Deployment Configuration for the webapp
apiVersion: apps/v1
kind: Deployment
metadata:
  name: weather-python-flask
spec:
  replicas: 2 # Number of desired pods. This is typically scaled based on load
  selector:
    matchLabels:
      app: weather-python-flask # This label matches the labels of the pods
  template:
    metadata:
      labels:
        app: weather-python-flask
    spec:
      containers:
        - name: weather-python-flask
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}" # Docker image to use for the pods
          ports:
            - containerPort: {{ .Values.service.targetPort }} # Port on which the container is listening
          env:
            # List of environment variables to set in the container
            - name: ENVIRONMENT
              value: "PRODUCTION"
            - name: PORT
              value: "{{ .Values.service.targetPort }}"
            # API_KEY and MONGODB_URI are fetched from Kubernetes secrets
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: api-key
                  key: API_KEY
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: mongodb-uri
                  key: MONGODB_URI
            - name: MONGODB_TESTS_URI
              valueFrom:
                secretKeyRef:
                  name: mongodb-tests-uri
                  key: MONGODB_TESTS_URI
            - name: FLASK_ENV
              value: "production"
          resources:
            # Resource requests and limits for the container
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "250m"
              memory: "256Mi"
